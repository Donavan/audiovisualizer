
    In the integration test for the basic pipeline, the error:

  ValueError: Invalid filter graph: Filter 'format' requires at least 1 inputs, got 0

This error is raised during the creation of the FFmpeg filter graph (inside the call stack through build_complex_filter → build_filter_chain → to_filter_string). This indicates that one of the filter nodes—in this case, a "format" filter—is being added without any connected inputs. In our code, this likely means that when the logo effect is added (via visualizer.add_effect for the 'logo' type), the underlying effect mapping isn’t wiring the source video input to that filter properly. A couple of things to check and consider are:   • Ensure that when you load media (visualizer.load_media), the primary video stream is correctly set up as the input node in the filter graph.   • Verify that the effect mapping for the 'logo' effect correctly connects its inputs (or overlays) to the main video stream. If not, the "format" or subsequent filters in the chain might be missing required inputs.   • Double-check the effect configuration (e.g., the scale and opacity parameters) to see if any of them are triggering a branch of the code that adds a “format” filter without an input.   • If the design expects the input stream to be explicitly connected to the effects graph, you may need to modify the visualizer.process workflow or the FFmpeg effect mapper to include a default “null” or “base” node representing the video source.

    In the save/load configuration test, the failure is due to the saved configuration not including the expected key:   assert '"input_path": "input.mp4"' in written_data

Instead, it appears the configuration file does not have the media input information (the file only contains something like “}”). This suggests that the save_config method is not serializing the input media path (or other configuration details) as expected. Two potential causes are:   • The input media path set by visualizer.load_media('input.mp4') might be stored in a different attribute or isn’t part of the configuration dictionary that save_config uses.   • The serialization logic in visualizer.save_config might be incomplete or might be serializing a minimal configuration structure without the media path.   To resolve this, you should check the implementation of save_config (in src/audiovisualizer/visualizer.py) to ensure it includes all necessary fields (especially “input_path”) that the tests expect. Alternatively, if the design has changed, you might need to update the test’s expected configuration content.

In summary, the first failure is related to an incomplete FFmpeg filter graph (likely due to a missing input connection in the effect mapping logic), and the second failure is related to the configuration save functionality not capturing the needed input file details. Reviewing and adjusting the connection logic in the FFmpeg effect mapper for the logo (or other) effects, as well as ensuring that the full configuration (including the media input path) is dumped during save_config, should address these issues.